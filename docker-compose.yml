version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: trading-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: trading_core
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - trading-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: trading-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - trading-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: trading-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - trading-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: trading-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - trading-network

  adminer:
    image: adminer:latest
    container_name: trading-adminer
    ports:
      - "8090:8080"
    networks:
      - trading-network

volumes:
  mysql_data:
    driver: local

networks:
  trading-network:
    driver: bridge